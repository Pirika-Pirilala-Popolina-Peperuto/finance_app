remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
binman::list_versions("chromedriver")
remDr$open()
binman::list_versions("chromedriver")
remDr <- remoteDriver(remoteServerAddr = "https://www.google.com.tw/", port = 4444L, browserName = "chrome")
remDr$open()
remDr$getStatus()
remDr <- remoteDriver(remoteServerAddr = "https://www.google.com.tw/", port = 4444L, browserName = "chrome")
remDr$open()
remDr$getStatus()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$getStatus()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$navigate("https://www.google.com.tw/")
remDr$open()
remDr$getStatus()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$navigate("https://www.google.com.tw/")
remDr$open()
remDr$navigate("https://www.google.com.tw/")
remDr$open()
remDr$navigate("https://tw.stock.yahoo.com/q/ta?s=2303")
remDr$open()
remDr$navigate("https://tw.stock.yahoo.com/q/ta?s=2303")
period <- remDr$findElement(using = "id" , value = "TAChartPeriod")
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://tw.stock.yahoo.com/q/ta?s=2303")
period <- remDr$findElement(using = "id" , value = "stockNavSearchBar")
period
[[period]]
[period]
periodp
period[]
period[0]
str(period)
period$getElementText()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://tw.stock.yahoo.com/q/ta?s=2303")
period <- remDr$findElement(using = "id" , value = "TAChartPeriod")
period$getElementText()
library("RSelenium")
# java -Dwebdriver.chrome.driver="./chromedriver.exe" -Dwebdriver.gecko.driver="./geckodriver.exe" -jar selenium-server-standalone-3.141.59.jar
# java -jar selenium-server-standalone-3.141.59.jar
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://tw.stock.yahoo.com/q/ta?s=2303")
period <- remDr$findElement(using = "xpath" , value = "/html/body/div/select[1]")
period$getElementText()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "/html/body/div/select[1]")
period$getElementText()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartPeriod\"]/option[5]")
period$clickElement()
library("RSelenium")
# java -Dwebdriver.chrome.driver="./chromedriver.exe" -Dwebdriver.gecko.driver="./geckodriver.exe" -jar selenium-server-standalone-3.141.59.jar
# java -jar selenium-server-standalone-3.141.59.jar
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartPeriod\"]/option[5]")
period$clickElement()
tech <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartIndex\"]/option[2]")
tech$clickElement()
text <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel1\"]/text()[1]")
text$getElementText()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartPeriod\"]/option[5]")
period$clickElement()
tech <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartIndex\"]/option[2]")
tech$clickElement()
text <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel1\"]/text()[1]")
text$getElementText()
text
text()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartPeriod\"]/option[5]")
period$clickElement()
tech <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartIndex\"]/option[2]")
tech$clickElement()
tech.k <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel2\"]/label[1]")
tech.d <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel2\"]/label[3]")
print(cat("k is " , tech.k$getElementText()))
print(cat("d is " , tech.d$getElementText()))
library("RSelenium")
# java -Dwebdriver.chrome.driver="./chromedriver.exe" -Dwebdriver.gecko.driver="./geckodriver.exe" -jar selenium-server-standalone-3.141.59.jar
# java -jar selenium-server-standalone-3.141.59.jar
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444L, browserName = "chrome")
remDr$open()
remDr$navigate("https://s.yimg.com/nb/tw_stock_frontend/scripts/TaChart/tachart.3de240ea9a.html?sid=2303")
period <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartPeriod\"]/option[5]")
period$clickElement()
tech <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartIndex\"]/option[2]")
tech$clickElement()
tech.k <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel2\"]/label[1]")
tech.d <- remDr$findElement(using = "xpath" , value = "//*[@id=\"TAChartLabel2\"]/label[3]")
print(tech.k$getElementText())
print(tech.d$getElementText())
tech.k
tech.k.text
tech.k$getElementText
tech.k$getElementText()
stock <- stock %>%
mutate(
ma1 = rowMeans(select(.,startsWith("close") , na.rm = TRUE)),
ma2 = rowMeans(select(.,startsWith("close") , na.rm = TRUE))
)
library(quantmod)
library(magrittr)
library(ggplot2)
library(tibble)
library(dplyr)
#整理資料至可行
code <- "2330.TW"
stock <- getSymbols(code, auto.assign = FALSE , from = "2015-01-01") %>% na.omit()
stock <- as.data.frame(stock)
stock$date <- as.Date(row.names(stock))
colnames(stock) <- c("open" , "high" , "low" , "close" , "volume","adj" ,"date")
stock <- stock %>% select(c(date,open:volume)) %>% as_tibble()
head(stock)
ma1_day <- 9
ma2_day <- 18
stock <- stock %>%
mutate(
ma1 = rowMeans(select(.,startsWith("close") , na.rm = TRUE)),
ma2 = rowMeans(select(.,startsWith("close") , na.rm = TRUE))
)
stock <- stock %>%
mutate(
ma1 = rowMeans(select(stock,startsWith("close") , na.rm = TRUE)),
ma2 = rowMeans(select(stock,startsWith("close") , na.rm = TRUE))
)
stock <- stock %>%
mutate(
ma1 = colMeans(select(stock,startsWith("close") , na.rm = TRUE)),
ma2 = colMeans(select(stock,startsWith("close") , na.rm = TRUE))
)
stock <- stock %>%
mutate(
ma1 = rollmean(stock$close , ma1_day),
ma2 = rollmean(stock$close , ma1_day)
)
stock <- stock %>%
mutate(
ma1 = frollmean(.[, close], 3),
ma2 = frollmean(.[, close], 3)
)
library(data.table)
stock <- stock %>%
mutate(
ma1 = frollmean(.[, close], 3),
ma2 = frollmean(.[, close], 3)
)
stock <- stock %>%
mutate(
ma1 = runMean(.[, close], 3),
ma2 = runMean(.[, close], 3)
)
stock <- stock %>%
mutate(
ma1 = runMean(stock$close, 3),
ma2 = runMean(stock$close, 3)
)
View(stock)
stock <- stock %>%
mutate(
ma1 = runMean(stock$close, ma1_day),
ma2 = runMean(stock$close, ma2_day)
)
view(stock)
stock <- stock %>%
mutate(
ma1 = runMean(stock$close, 2),
ma2 = runMean(stock$close, ma2_day)
)
View(stock)
library(quantstrat)
install.packages("quantstrat")
install.packages("devtools") # if not installed
install.packages("FinancialInstrument") #if not installed
install.packages("devtools")
# next install blotter from GitHub
devtools::install_github("braverock/blotter")
# next install quantstrat from GitHub
devtools::install_github("braverock/quantstrat")
# next install blotter from GitHub
devtools::install_github("braverock/blotter")
# next install quantstrat from GitHub
devtools::install_github("braverock/quantstrat")
install.packages("devtools")
require(devtools)
install_github("braverock/FinancialInstrument")
install.packages("devtools")
require(devtools)
install_github("braverock/FinancialInstrument")
install_github("joshuaulrich/xts")
install_github("braverock/blotter")
install_github("braverock/quantstrat")
install_github("braverock/PerformanceAnalytics")
install.packages("installr")
installr::updateR()
installr::updateR()
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
require(devtools)
install_github("braverock/FinancialInstrument")
install.packages("devtools")
install_github("braverock/FinancialInstrument")
install.packages("devtools")
require(devtools)
install_github("braverock/FinancialInstrument")
R
install.packages("installr")
version
library("installr")
installr()
installr()
installr()
version
version
install.packages("devtools")
require(devtools)
install_github("braverock/FinancialInstrument")
install_github("joshuaulrich/xts")
install_github("braverock/blotter")
install_github("braverock/quantstrat")
install_github("braverock/PerformanceAnalytics")
library(quantstrat)
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", "\")
_
_
)
aa
afdsafdsa
sadas
sadsa
)))
\\"
\"
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", "\ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", "\ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", "\\ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \\\\ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ ")
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ ")
::
gsub("\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: ")
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: :: \\ ")
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: :: \\ \ \ \ \\\ ")
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: :: \\ \ \ \ \\\\\\\\\\\\ ")
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: :: :: \\ \ \ \ \\\\\\\\\\\\ ")
gsub("\\\\|/|\\*|\\?|:|\"|>|<|\\|", "", " \ \ \ :: :: ::: \\ \ \ \ \\\\\\\\\\\\ ")
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".///")
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".//")
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".//\\")
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".//\")
\
""
"
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".//\ ")
gsub("/|\\*|\\?|:|\"|>|<|\\|", "", ".//\ ?\ /| ")
/b
"\b"
"\"
""
"
df <- data.frame(a = c(1:5), b = c(6:10), c = c(11:15))
df
df[which(b >= 7 & b <= 9), ]
df[which(df$b >= 7 & df$b <= 9), ]
t <- tribble(x=character() , y=numeric())
library(tibble)
library(magrittr).
library(tibble)
library(magrittr)
t <- tribble(x=character() , y=numeric())
t <- tibble(x=character() , y=numeric())
library(tibble)
library(magrittr)
t <- t %>% tribble(x=1 , y = 2)
library(tibble)
library(magrittr)
t <- t %>% tibble(x=1 , y = 2)
t <- t %>% tibble(x="a" , y = 1)
t
t <- t %>% add_row(x="a" , y = 1)
t
pwd
getpwd
gepwd
getwd
getwd()
file.exists("C:/User/user")
file.exists("C:/Users/user/Desktop")
#### Domino titles & contents
x.Domino <- POST("https://walex.io/backend/kqe_report/gr_lnk.php?" ,
body=list(p="7533967im", u= "238") , encode = "multipart")
x.Domino <- jsonlite::fromJSON(content(data , type="text" , encoding="UTF8"))
####
library(magrittr)
library(doBy)
library(readxl)
library(igraph)
library(googledrive)
library(jsonlite)
library(ggplot2)
library(httr)
library(RCurl)
library(rjson)
library(data.table)
#### Start ====
library(dplyr)
library(tidytext)
#### Domino titles & contents
x.Domino <- POST("https://walex.io/backend/kqe_report/gr_lnk.php?" ,
body=list(p="7533967im", u= "238") , encode = "multipart")
x.Domino <- jsonlite::fromJSON(content(data , type="text" , encoding="UTF8"))
View(x.Domino)
#### Domino titles & contents
x.Domino <- POST("https://walex.io/backend/kqe_report/gr_lnk.php?" ,
body=list(p="7533967im", u= "238") , encode = "multipart")
x.Domino <- jsonlite::fromJSON(content(x.Domino , type="text" , encoding="UTF8"))
x.Domino
View(x.Domino)
v.Domino <- unique(x.Domino$Domino)
n.Domino <- length(v.Domino)
View(x.Domino)
View(v.Domino)
v.Domino <- unique(x.Domino$domino)
n.Domino <- length(v.Domino)
v.Domino <- v.Domino[n.Domino:1]    # 新的骨牌優先
x.Domino <- x.Domino[n.Domino:1,]
View(v.Domino)
n.Domino:1
v.Domino <- v.Domino[n.Domino:1]
#### Domino titles & contents
x.Domino <- POST("https://walex.io/backend/kqe_report/gr_lnk.php?" ,
body=list(p="7533967im", u= "238") , encode = "multipart")
x.Domino <- jsonlite::fromJSON(content(x.Domino , type="text" , encoding="UTF8"))
v.Domino <- unique(x.Domino$domino)
n.Domino <- length(v.Domino)
v.Domino <- v.Domino[n.Domino:1]    # 新的骨牌優先
x.Domino <- x.Domino[n.Domino:1,]
View(x.Domino)
x.Domino[["domino"]]
#### personal subscription
data <- POST("https://walex.io/backend/kqe_report/gr_lnk.php?" ,
body=list(p="7533967im", u= "238") , encode = "multipart")
x0.new <- jsonlite::fromJSON(content(data , type="text" , encoding="UTF8"))
View(x0.new)
data.frame(a = c(1:10), b = c(1:10))
data <- data.frame(a = c(1:10), b = c(1:10))
data <- rbind(data, data.frame(a = c(1:10), b = c(1:10)))
data
data[data$a == 4, ]
#### read all news data
news_api <- POST("https://walex.io/backend/kqe_report/lazy_all_list.php" , body=list(p="7533967im") , encode = "multipart",  accept_json())
news_json <- jsonlite::fromJSON(content(news_api,type="text",encoding = "UTF8"))
View(news_json)
a <- Sys.time()
a
str(a)
b <- as.POSIXct(
"2020-09-12 00:02:53 CST"
)
b
difftime(a, b, units = "weeks")
library("plotly")
c("a":"d")
library("plotly")
data <- data.frame(name = c("大衛", "大帥", "大王"), percent = c(0.4, 0.3, 0.2))
fig <- data %>% plot_ly(data, x = name, y = percent, mode = "lines")
data
fig <- data %>% plot_ly(data, x = ~name, y = ~percent, mode = "lines")
fig
data <- data.frame(name = c("大衛", "大帥", "大王"), percent = c(0.4, 0.3, 0.2))
fig <- data %>% plot_ly(data, x = ~name, y = ~percent, type = "scatter", mode = "lines")
fig
fig <- data %>% plot_ly(data, x = name, y = percent, type = "scatter", mode = "lines")
fig
fig <- plot_ly(data, x = name, y = percent, type = "scatter", mode = "lines")
fig
fig <- plot_ly(data, x = ~name, y = ~percent, type = "scatter", mode = "lines")
fig
fig
data <- data.frame(name = c("大衛", "大帥", "大王"), percent = c(0.4, 0.3, 0.2))
#* @get /main_income
fig <- plot_ly(data, labels = ~name, values = ~percent, type = "pie") +
layout(title = "收入主要來源商品",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
#* @get /main_income
fig <- plot_ly(data, labels = ~name, values = ~percent, type = "pie")
fig <- fig %>% layout(title = "收入主要來源商品",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(data, labels = ~name, values = ~percent, type = "pie",
textinfo = "label+percent", insidetextorientation = "radial")
fig <- fig %>% layout(title = "收入主要來源商品",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
library("plotly")
library("plumber")
main_income
#* @get /main_income
main_income <- function(){
data <- data.frame(name = c("大衛", "大帥", "大王"), percent = c(0.4, 0.3, 0.2))
#* @get /main_income
fig <- plot_ly(data, labels = ~name, values = ~percent, type = "pie",
textinfo = "label+percent", insidetextorientation = "radial")
fig <- fig %>% layout(title = "收入主要來源商品",
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
pic <- main_income()
pic
library(plumber)
# 'plumber.R' is the location of the file shown above
pr("plumber.R") %>%
pr_run(port=8000)
pr <- plumber::plumb("API.R")
getwd
getwd()
library("plotly")
library("plumber")
setwd("D:\\NTUT\\大三上\\資料庫管理\\project\\finacial_app\\R")
pr <- plumber::plumb("API.R")
pr$run()
pr$run()
pr <- plumber::plumb("API.R")$port(3812)
pr <- plumber::plumb("API.R")
pr$run(port = "3812")
pr <- plumber::plumb("API.R")
pr$run(port = "3812")
pr <- plumber::plumb("API.R")
pr$run(port = "3812")
pr$run()
pr <- plumber::plumb("API.R")
pr$run()
fig <- ggplot(data, aes(x = "", y = percent, fill = name)) +
geom_bar(stat = "identity", width=1)+
coord_polar("y", start = 0)
fig
fig <- ggplot(data, aes(x = "", y = percent, fill = name)) +
geom_bar(stat = "identity", width=1, color = "white")+
coord_polar("y", start = 0) +
theme_void()
fig
# Compute the position of labels
data <- data %>%
arrange(desc(name)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Compute the position of labels
data <- data %>%
arrange(desc(name)) %>%
mutate(prop = percent / sum(data$percent) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
data
fig <- ggplot(data, aes(x = "", y = percent, fill = name)) +
geom_bar(stat = "identity", width=1, color = "white")+
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "none") +
geom_text(aes(y = ypos, label = name), color = "white", size=6)+
scale_fill_brewer(palette = "Set1")
fig
# Compute the position of labels
data <- data %>%
arrange(desc(name)) %>%
mutate(prop = percent / sum(data$percent) *10000) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
fig <- ggplot(data, aes(x = "", y = percent, fill = name)) +
geom_bar(stat = "identity", width=1, color = "white")+
coord_polar("y", start = 0) +
theme_void() +
theme(legend.position = "none") +
geom_text(aes(y = ypos, label = name), color = "white", size=6)+
scale_fill_brewer(palette = "Set1")
fig
fig <- ggplot(data, aes(x = "", y = percent, fill = name)) +
geom_bar(stat = "identity", width=1, color = "white")+
coord_polar("y", start = 0) +
theme_void()
fig
pr <- plumber::plumb("API.R")
pr$run(port = "3812")
pr <- plumber::plumb("API.R")
pr$run()
pr <- plumber::plumb("API.R")
pr$run()
pr <- plumber::plumb("API.R")
pr <- plumber::plumb("API.R")
pr$run()
